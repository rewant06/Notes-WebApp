services:

  server:
    build:
      context: ./server
    restart: unless-stopped
    env_file:
      - ./infra/backend.env
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "python", "-c", "import socket,sys; s=socket.socket(); s.settimeout(2); s.connect(('127.0.0.1',8000)); s.close(); sys.exit(0)"]
      interval: 10s
      timeout: 3s
      retries: 10
    # No DB container; server uses DATABASE_URL (Neon)

  client:
    build:
      context: ./client
    restart: unless-stopped
    env_file:
      - ./infra/frontend.env
    environment:
      HOST: 0.0.0.0
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:3000/ || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    depends_on:
      - server

  proxy:
    image: nginx:stable-alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./proxy/ngnix/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      client:
        condition: service_healthy
      server:
        condition: service_healthy

